import { CountryEnum } from "src/enums/country.enum";
import { GuaranteeEnum } from "src/enums/guarantee.enum";
import { InStockEnum } from "src/enums/in-stock.enum";
import { ProductProducerEntity } from "src/modules/product-producers/product-producer.entity";
import { TypeOfProductEntity } from "src/modules/type-of-products/type-of-product.entity";
import { ICalculatorChar } from "./ICalculatorChar";

export interface IProductCalculator{    
    id: number,
    typeOfProduct: TypeOfProductEntity,
    productProducer: ProductProducerEntity | null,
    name: string,
    country: CountryEnum,
    guarantee: GuaranteeEnum,
    price: number,
    inStock: InStockEnum,
    fabricMaterialThickness: number,
    fabricMaterialHeight: number,
    fabricMaterialWidth: ICalculatorChar | null,
    doorIsolation: ICalculatorChar[],
    doorFrameMaterial: ICalculatorChar | null,
    doorSelectionBoard: ICalculatorChar | null,
    doorWelt: ICalculatorChar | null,
    doorHand: ICalculatorChar | null,
    doorMechanism: ICalculatorChar | null,
    doorLoops: ICalculatorChar | null,
    doorStopper: ICalculatorChar | null,
    doorSlidingSystem: ICalculatorChar | null,
    frameMaterialThickness: number,
    doorInsulation: ICalculatorChar[],
    covering: ICalculatorChar[],
    doorPeephole: boolean,
    openingType: ICalculatorChar[],
    size: ICalculatorChar[],
    lowerLock: ICalculatorChar[],
    upperLock: ICalculatorChar[],
    weight: ICalculatorChar[],
    metalThickness: number,
    frameMaterialConstruction: ICalculatorChar[],
    sealerCircuit: ICalculatorChar[],
    mosquitoNet: ICalculatorChar | null,
    windowSill: ICalculatorChar | null,
    windowEbb: ICalculatorChar | null,
    windowHand: ICalculatorChar | null,
    childLock: ICalculatorChar | null,
    housewifeStub: ICalculatorChar | null,
    glassPocketAdd: ICalculatorChar | null,
    lamination: ICalculatorChar | null,
    profile: ICalculatorChar | null,
    windowWidth: number,
    windowHeight: number,
    camerasCount: ICalculatorChar[],
    features: ICalculatorChar[],
    sectionsCount: ICalculatorChar[],
    description: string,
    homePage: boolean,
    images: string[],
    choosenImage: number
}